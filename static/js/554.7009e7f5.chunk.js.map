{"version":3,"file":"static/js/554.7009e7f5.chunk.js","mappings":"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","sources":["features/checkout/aside-column/CheckoutPriceSubtotal.tsx","features/checkout/aside-column/first-step/CheckoutSubtotal.tsx","features/checkout/main-column/first-step/CheckoutCartReview.tsx","features/checkout/aside-column/second-step/CheckoutOrderReviewTitle.tsx","features/checkout/aside-column/second-step/CheckoutOrderReview.tsx","features/checkout/aside-column/CheckoutAside.tsx","features/checkout/stepsConfirmation.tsx","features/checkout/CheckoutButtonPurchase.tsx","features/checkout/CheckoutButtonModify.tsx","features/checkout/main-column/second-step/statuses/FilledStep.tsx","features/checkout/main-column/second-step/statuses/ModifyStep.tsx","features/checkout/main-column/second-step/steps/CheckoutCheckMailStep.tsx","features/checkout/main-column/second-step/statuses/InActiveStep.tsx","features/checkout/main-column/second-step/steps/CheckoutDeliveryMethodStep.tsx","features/checkout/main-column/second-step/steps/CheckoutFinalizationStep.tsx","features/checkout/main-column/second-step/steps/CheckoutPaymentMethodStep.tsx","features/checkout/main-column/second-step/steps/CheckoutShippingAddressStep.tsx","features/checkout/main-column/second-step/CheckoutConfirmationStep.tsx","features/checkout/main-column/CheckoutMain.tsx","features/checkout/CheckoutColumnWrapper.tsx","pages/Checkout.tsx"],"sourcesContent":["import React, { FC } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { totalPrice } from '../../../api/feature/cart-slice/cartSlice'\r\n\r\nconst style = {\r\n  subtotal: {\r\n    wrapper: {\r\n      textTransform: 'uppercase',\r\n      display: 'flex',\r\n      justifyContent: 'space-between'\r\n    },\r\n    label: {\r\n      fontWeight: 500\r\n    },\r\n    price: {\r\n      fontWeight: 300,\r\n      marginBottom: 20\r\n    }\r\n  }\r\n} as const\r\n\r\nconst CheckoutPriceSubtotal: FC = () => {\r\n  const cartTotal = useSelector(totalPrice)\r\n\r\n  return (\r\n    <div style={style.subtotal.wrapper}>\r\n      <p style={style.subtotal.label}>Subtotal&nbsp;</p>\r\n      <div style={style.subtotal.price}>\r\n        <span>£&nbsp;</span>\r\n        <span>{cartTotal}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CheckoutPriceSubtotal\r\n","import React, { FC } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectAllShippingMethods } from '../../../../api/feature/checkout/checkoutSlice'\r\nimport { Button } from '../../../../components'\r\nimport CheckoutPriceSubtotal from '../CheckoutPriceSubtotal'\r\n\r\nconst style = {\r\n  wrapper: {\r\n    background: '#F6F6F6',\r\n    padding: 25\r\n  },\r\n  shipping: {\r\n    label: {\r\n      textTransform: 'uppercase',\r\n      fontWeight: 500,\r\n      marginBottom: 10\r\n    },\r\n    method: {\r\n      lineHeight: '25px',\r\n      fontWeight: 300\r\n    }\r\n  },\r\n  procced: {\r\n    width: '100%',\r\n    marginLeft: '0',\r\n    border: '1px solid'\r\n  }\r\n} as const\r\n\r\nconst CheckoutSubtotal: FC = () => {\r\n  const shippingMethods = useSelector(selectAllShippingMethods)\r\n\r\n  return (\r\n    <div className=\"checkout-order-summary\" style={style.wrapper}>\r\n      {/* subtotal */}\r\n      <CheckoutPriceSubtotal />\r\n\r\n      {/* shipping method */}\r\n      <p style={style.shipping.label}>Shipping method&nbsp;</p>\r\n      {shippingMethods.map((method) => (\r\n        <div style={style.shipping.method}>{method}</div>\r\n      ))}\r\n\r\n      {/* proceed to purchase */}\r\n      <Button\r\n        type=\"link\"\r\n        text=\"Procced to purchase\"\r\n        path=\"/checkout/confirmation\"\r\n        variant=\"black\"\r\n        styleCss={style.procced}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CheckoutSubtotal\r\n","import React, { FC } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectAllProductsCart } from '../../../../api/feature/cart-slice/cartSlice'\r\nimport CartItem from '../../../cart/components/CartItem'\r\n\r\nconst CheckoutCartReview: FC = () => {\r\n  const allProductsCart = useSelector(selectAllProductsCart)\r\n\r\n  const generateProductsReview = () => {\r\n    return allProductsCart.map((product) => (\r\n      <CartItem product={product} key={product.id} />\r\n    ))\r\n  }\r\n\r\n  const cartReviewList = generateProductsReview()\r\n\r\n  return <div className=\"cart-review\">{cartReviewList}</div>\r\n}\r\n\r\nexport default CheckoutCartReview\r\n","import React, { FC } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { totalQuantity } from '../../../../api/feature/cart-slice/cartSlice'\r\nimport { Button } from '../../../../components'\r\nimport CountLabel from '../../../cart/components/CountLabel'\r\n\r\nconst style = {\r\n  orderReview: {\r\n    wrapper: {\r\n      marginBottom: 25\r\n    },\r\n    labelContainer: {\r\n      display: 'flex',\r\n      justifyContent: 'space-between',\r\n      marginBottom: 10\r\n    },\r\n    label: {\r\n      textTransform: 'uppercase',\r\n      fontWeight: 500\r\n    },\r\n    modify: {\r\n      color: 'black',\r\n      fontWeight: 300,\r\n      margin: 0,\r\n      borderBottom: '1px solid black'\r\n    }\r\n  }\r\n} as const\r\n\r\nconst CheckoutOrderReviewTitle: FC = () => {\r\n  const productNumber = useSelector(totalQuantity)\r\n  return (\r\n    <div style={style.orderReview.wrapper}>\r\n      {/* label */}\r\n      <div style={style.orderReview.labelContainer}>\r\n        <p style={style.orderReview.label}>Order Review&nbsp;</p>\r\n\r\n        <Button\r\n          type=\"link\"\r\n          path=\"/checkout/cart\"\r\n          text=\"Modify\"\r\n          styleCss={style.orderReview.modify}\r\n        />\r\n      </div>\r\n\r\n      {/* items number */}\r\n      <CountLabel count={productNumber} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CheckoutOrderReviewTitle\r\n","import React, { FC } from 'react'\r\nimport CheckoutCartReview from '../../main-column/first-step/CheckoutCartReview'\r\nimport CheckoutPriceSubtotal from '../CheckoutPriceSubtotal'\r\nimport CheckoutOrderReviewTitle from './CheckoutOrderReviewTitle'\r\n\r\nconst style = {\r\n  wrapper: {\r\n    background: '#F6F6F6',\r\n    padding: 25\r\n  },\r\n  priceSubtotal: {\r\n    marginTop: 20\r\n  }\r\n}\r\n\r\nconst CheckoutOrderReview: FC = () => {\r\n  return (\r\n    <div style={style.wrapper}>\r\n      <CheckoutOrderReviewTitle />\r\n      <CheckoutCartReview />\r\n      <div style={style.priceSubtotal}>\r\n        <CheckoutPriceSubtotal />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CheckoutOrderReview\r\n","import React, { FC } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectIsStep } from '../../../api/feature/checkout/checkoutSlice'\r\nimport { useSizeScreen } from '../../../hooks'\r\nimport CheckoutSubtotal from './first-step/CheckoutSubtotal'\r\nimport CheckoutOrderReview from './second-step/CheckoutOrderReview'\r\n\r\nconst CheckoutAside: FC = () => {\r\n  const screen = useSizeScreen()\r\n  const isStep = useSelector(selectIsStep)\r\n\r\n  const style = {\r\n    aside: {\r\n      width: '100%',\r\n      maxWidth: screen.isX || screen.isL ? '33.333%' : undefined,\r\n      marginLeft: screen.isX || screen.isL ? 32 : undefined\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"checkout-aside\" style={style.aside}>\r\n      {/* step 1 */}\r\n      {isStep.cart && <CheckoutSubtotal />}\r\n\r\n      {/* step 2 */}\r\n      {isStep.confirmation && <CheckoutOrderReview />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CheckoutAside\r\n","const steps = {\r\n  mail: 'mail',\r\n  shippingAddress: 'shippingAddress',\r\n  deliveryMethod: 'deliveryMethod',\r\n  paymentMethod: 'paymentMethod',\r\n  finalizationStep: 'finalizationStep'\r\n}\r\n\r\nexport default steps\r\n","import React, { CSSProperties, FC, useState } from 'react'\r\n\r\ninterface IProps {\r\n  text: string\r\n  styleCss?: CSSProperties\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void\r\n}\r\n\r\nconst CheckoutButtonPurchase: FC<IProps> = ({ text, styleCss, onClick }) => {\r\n  const [onMouse, setOnMouse] = useState<boolean>(false)\r\n\r\n  const style = {\r\n    button: {\r\n      textTransform: 'uppercase',\r\n      width: 'auto',\r\n      padding: '12px 18px',\r\n      marginTop: 15,\r\n      position: 'relative',\r\n      backgroundSize: '200% 100%',\r\n      backgroundColor: 'transparent',\r\n      backgroundImage:\r\n        'linear-gradient(to right,#da291c 0%,#da291c 50%,transparent 50%,transparent 100%)',\r\n      backgroundPosition: onMouse ? 'left' : 'right',\r\n      border: '1px solid',\r\n      borderColor: onMouse ? 'transparent' : '#000',\r\n      borderRadius: 25,\r\n      color: onMouse ? '#fff' : '#000',\r\n      outline: 'none',\r\n      textAlign: 'center',\r\n      overflow: 'hidden',\r\n      willChange: 'color, border-color, background-position',\r\n      transition: 'color 0.25s, border-color 0.25s, background-position 0.25s'\r\n    }\r\n  } as const\r\n\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      style={{ ...style.button, ...styleCss }}\r\n      onClick={onClick}\r\n      onMouseEnter={() => setOnMouse(true)}\r\n      onMouseLeave={() => setOnMouse(false)}>\r\n      {text}\r\n    </button>\r\n  )\r\n}\r\n\r\nCheckoutButtonPurchase.defaultProps = {\r\n  styleCss: {}\r\n}\r\n\r\nexport default CheckoutButtonPurchase\r\n","import React, { CSSProperties, FC } from 'react'\r\n\r\ninterface IProps {\r\n  text: string\r\n  styleCss?: CSSProperties\r\n  onClick: () => void\r\n}\r\n\r\nconst CheckoutButtonModify: FC<IProps> = ({ text, styleCss, onClick }) => {\r\n  const style = {\r\n    button: {\r\n      lineHeight: '20px',\r\n      letterSpacing: 0.5,\r\n      fontWeight: 300,\r\n      padding: '2px 0',\r\n      textAlign: 'center',\r\n      borderBottom: '1px solid #000'\r\n    }\r\n  } as const\r\n\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      style={{ ...style.button, ...styleCss }}\r\n      onClick={onClick}>\r\n      {text}\r\n    </button>\r\n  )\r\n}\r\n\r\nCheckoutButtonModify.defaultProps = {\r\n  styleCss: {}\r\n}\r\n\r\nexport default CheckoutButtonModify\r\n","import React, { FC } from 'react'\r\nimport { AiOutlineCheck } from 'react-icons/ai'\r\nimport { useSizeScreen } from '../../../../../hooks'\r\nimport { IData } from '../../../../../hooks/useForm'\r\nimport CheckoutButtonModify from '../../../CheckoutButtonModify'\r\n\r\ninterface IProps {\r\n  id: string\r\n  status: { data: boolean; active: boolean }\r\n  activeStep: string | undefined\r\n  handleEditStep: (id: string, activeStep: string | undefined) => void\r\n  title: string\r\n  formData: IData\r\n}\r\n\r\nconst FilledStep: FC<IProps> = ({\r\n  id,\r\n  status,\r\n  activeStep,\r\n  handleEditStep,\r\n  title,\r\n  formData\r\n}) => {\r\n  const screen = useSizeScreen()\r\n  const style = {\r\n    step: {\r\n      display: 'flex',\r\n      flexDirection: screen.isS || screen.isM ? 'column' : 'row',\r\n      justifyContent: 'space-between',\r\n      alignItems: screen.isS || screen.isM ? 'start' : 'center'\r\n    },\r\n    welcomeMessage: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      flexWrap: 'wrap',\r\n      lineHeight: '20px',\r\n      fontWeight: 500\r\n    },\r\n    iconCheck: {\r\n      height: 20,\r\n      width: 20,\r\n      marginLeft: 10,\r\n      position: screen.isS || screen.isM ? 'absolute' : undefined,\r\n      right: 0\r\n    },\r\n    buttonModify: {\r\n      marginTop: screen.isS || screen.isM ? 15 : 0\r\n    },\r\n    formDataWrapper: {\r\n      fontWeight: 300\r\n    },\r\n    formDataValue: {\r\n      lineHeight: '20px'\r\n    }\r\n  } as const\r\n\r\n  function showFormData() {\r\n    return Object.keys(formData).map((key) => (\r\n      <div style={style.formDataValue}>\r\n        {formData[key as keyof typeof status]}\r\n      </div>\r\n    ))\r\n  }\r\n\r\n  const filledStep = status.active && status.data && activeStep !== id\r\n\r\n  return filledStep ? (\r\n    <div>\r\n      <div style={style.step}>\r\n        <div style={style.welcomeMessage}>\r\n          <span>{title}:&nbsp;</span>\r\n\r\n          {/* form data */}\r\n          {id !== 'shippingAddress' && (\r\n            <div style={style.formDataWrapper}>{showFormData()}</div>\r\n          )}\r\n\r\n          <AiOutlineCheck style={style.iconCheck} />\r\n        </div>\r\n\r\n        {/* form data shipping address, size S/M */}\r\n        {id === 'shippingAddress' && (screen.isS || screen.isM) && (\r\n          <div style={{ ...style.formDataWrapper, marginTop: 20 }}>\r\n            {showFormData()}\r\n          </div>\r\n        )}\r\n\r\n        <CheckoutButtonModify\r\n          onClick={() => handleEditStep(id, activeStep)}\r\n          text=\"Modify\"\r\n          styleCss={style.buttonModify}\r\n        />\r\n      </div>\r\n\r\n      {/* form data shipping address, size X/L */}\r\n      {id === 'shippingAddress' && (screen.isL || screen.isX) && (\r\n        <div style={{ ...style.formDataWrapper, marginTop: 20 }}>\r\n          {showFormData()}\r\n        </div>\r\n      )}\r\n    </div>\r\n  ) : null\r\n}\r\n\r\nexport default FilledStep\r\n","import React, { FC, ReactNode } from 'react'\r\n\r\ninterface IProps {\r\n  activeStep: string | undefined\r\n  id: string\r\n  title: string\r\n  subtitle?: string\r\n  children: ReactNode\r\n}\r\n\r\nconst style = {\r\n  title: {\r\n    textTransform: 'uppercase',\r\n    fontWeight: 500,\r\n    marginBottom: 25\r\n  },\r\n  subtitle: {\r\n    textTransform: 'uppercase',\r\n    marginBottom: 25\r\n  },\r\n  description: {\r\n    fontWeight: 300,\r\n    marginBottom: 20\r\n  }\r\n} as const\r\n\r\nconst ModifyStep: FC<IProps> = ({\r\n  activeStep,\r\n  title,\r\n  subtitle,\r\n  id,\r\n  children\r\n}) => {\r\n  const modifyStep = activeStep === id\r\n\r\n  return modifyStep ? (\r\n    <div>\r\n      <h2 style={style.title}>{title}</h2>\r\n      {subtitle && <div style={style.subtitle}>{subtitle}</div>}\r\n      <form>{children}</form>\r\n    </div>\r\n  ) : null\r\n}\r\n\r\nModifyStep.defaultProps = {\r\n  subtitle: ''\r\n}\r\n\r\nexport default ModifyStep\r\n","import React, { FC } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { saveEmail } from '../../../../../api/feature/checkout/checkoutSlice'\r\nimport Input from '../../../../../components/Input'\r\nimport { useForm } from '../../../../../hooks'\r\nimport { IPropsSteps } from '../../../checkout.interface'\r\nimport CheckoutButtonPurchase from '../../../CheckoutButtonPurchase'\r\nimport FilledStep from '../statuses/FilledStep'\r\nimport ModifyStep from '../statuses/ModifyStep'\r\n\r\nconst CheckoutCheckMailStep: FC<IPropsSteps> = ({\r\n  id,\r\n  status,\r\n  setStepStatus,\r\n  activeStep,\r\n  handleEditStep,\r\n  goToNextStep\r\n}) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const {\r\n    inputs,\r\n    errors,\r\n    handleOnChange,\r\n    handleOnBlur,\r\n    onSubmitCheckValidation\r\n  } = useForm({\r\n    email: ''\r\n  })\r\n\r\n  const style = {\r\n    wrapper: {\r\n      backgroundColor: activeStep !== id ? '#fff' : '#f6f6f6',\r\n      padding: 25,\r\n      borderBottom: '1px solid #e1e0e0',\r\n      position: 'relative'\r\n    }\r\n  } as const\r\n\r\n  const handleOnProceed = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault()\r\n\r\n    if (onSubmitCheckValidation()) {\r\n      dispatch(saveEmail(inputs.email))\r\n      goToNextStep(id)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"step-checkMail\" style={style.wrapper}>\r\n      {/* filled */}\r\n      <FilledStep\r\n        id={id}\r\n        status={status}\r\n        activeStep={activeStep}\r\n        title=\"You are ordering with this email address\"\r\n        handleEditStep={handleEditStep}\r\n        formData={inputs}\r\n      />\r\n\r\n      {/* not filled/ to edit */}\r\n      <ModifyStep\r\n        activeStep={activeStep}\r\n        id={id}\r\n        title=\"Login information\"\r\n        subtitle=\"Insert your email address to proceed with the purchase.\">\r\n        <Input\r\n          label=\"Email address\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          dataValRegex=\"Invalid email address\"\r\n          dataValRegexPattern=\"^$|^\\w+([\\.+-]?\\w+)*@\\w+([\\.-]?\\w+)*\\.(\\w{2,25})$\"\r\n          dataValRequired=\"The email address field is required.\"\r\n          dataValLengthMax=\"50\"\r\n          value={inputs?.email || ''}\r\n          onChange={handleOnChange}\r\n          onBlur={handleOnBlur}\r\n          error={errors.email}\r\n        />\r\n\r\n        <CheckoutButtonPurchase text=\"Proceed\" onClick={handleOnProceed} />\r\n      </ModifyStep>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CheckoutCheckMailStep\r\n","import React, { FC } from 'react'\r\n\r\ninterface IProps {\r\n  status: { data: boolean; active: boolean }\r\n  activeStep: string | undefined\r\n  id: string\r\n  title: string\r\n}\r\n\r\nconst style = {\r\n  title: {\r\n    textTransform: 'uppercase',\r\n    fontWeight: 500,\r\n    color: '#646464'\r\n  }\r\n} as const\r\n\r\nconst InactiveStep: FC<IProps> = ({ status, activeStep, title, id }) => {\r\n  const inactiveStep = !status.active && !status.data && activeStep !== id\r\n\r\n  return inactiveStep ? <h2 style={style.title}>{title}</h2> : null\r\n}\r\n\r\nexport default InactiveStep\r\n","import React, { FC, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { IPropsSteps } from '../../../checkout.interface'\r\nimport InactiveStep from '../statuses/InActiveStep'\r\nimport FilledStep from '../statuses/FilledStep'\r\nimport ModifyStep from '../statuses/ModifyStep'\r\nimport {\r\n  saveDelivery,\r\n  selectAllShippingMethods\r\n} from '../../../../../api/feature/checkout/checkoutSlice'\r\nimport { RadioButton } from '../../../../../components'\r\nimport CheckoutButtonPurchase from '../../../CheckoutButtonPurchase'\r\n\r\nconst CheckoutDeliveryMethodStep: FC<IPropsSteps> = ({\r\n  id,\r\n  status,\r\n  activeStep,\r\n  setStepStatus,\r\n  handleEditStep,\r\n  goToNextStep\r\n}) => {\r\n  const dispatch = useDispatch()\r\n  const shippingMethods = useSelector(selectAllShippingMethods)\r\n  const [delivery, setDelivery] = useState<string>(shippingMethods[0])\r\n\r\n  const style = {\r\n    wrapper: {\r\n      backgroundColor: activeStep !== id ? '#fff' : '#f6f6f6',\r\n      padding: 25,\r\n      borderBottom: '1px solid #e1e0e0',\r\n      position: 'relative'\r\n    }\r\n  } as const\r\n\r\n  useEffect(() => {\r\n    if (activeStep === id) setStepStatus(id)\r\n  }, [activeStep])\r\n\r\n  const onChangeShippingMethod = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setDelivery(e.target.value)\r\n  }\r\n\r\n  const handleOnProceed = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault()\r\n\r\n    dispatch(saveDelivery(delivery))\r\n    goToNextStep(id)\r\n  }\r\n\r\n  return (\r\n    <div className=\"step-deliveryMethod\" style={style.wrapper}>\r\n      {/* inactive step */}\r\n      <InactiveStep\r\n        id={id}\r\n        status={status}\r\n        activeStep={activeStep}\r\n        title=\"Delivery information\"\r\n      />\r\n\r\n      {/* filled step */}\r\n      <FilledStep\r\n        id={id}\r\n        status={status}\r\n        activeStep={activeStep}\r\n        title=\"Delivery information\"\r\n        handleEditStep={handleEditStep}\r\n        formData={{ delivery }}\r\n      />\r\n\r\n      {/* not filled step/modify */}\r\n      <ModifyStep activeStep={activeStep} id={id} title=\"Delivery information\">\r\n        {shippingMethods.map((method) => (\r\n          <RadioButton\r\n            label={method}\r\n            value={method === delivery}\r\n            onChange={onChangeShippingMethod}\r\n            key={method}\r\n          />\r\n        ))}\r\n        <CheckoutButtonPurchase text=\"Proceed\" onClick={handleOnProceed} />\r\n      </ModifyStep>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CheckoutDeliveryMethodStep\r\n","import React, { FC } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { clearCart } from '../../../../../api/feature/cart-slice/cartSlice'\r\nimport CheckoutButtonPurchase from '../../../CheckoutButtonPurchase'\r\n\r\ninterface IProps {\r\n  id: string\r\n  activeStep: string | undefined\r\n}\r\n\r\nconst style = {\r\n  wrapper: {\r\n    backgroundColor: '#f6f6f6',\r\n    padding: 20,\r\n    margin: 25\r\n  },\r\n  title: {\r\n    textTransform: 'uppercase',\r\n    fontWeight: 500,\r\n    marginBottom: 25\r\n  },\r\n  acceptConditions: {\r\n    marginBottom: 15,\r\n    fontWeight: 300\r\n  },\r\n  checkData: {\r\n    marginBottom: 15,\r\n    fontWeight: 300\r\n  },\r\n  buttonWrapper: {\r\n    textAlign: 'center'\r\n  }\r\n} as const\r\n\r\nconst CheckoutFinalizationStep: FC<IProps> = ({ id, activeStep }) => {\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n  const modifyStep = activeStep === id\r\n\r\n  function navToThankYouPage() {\r\n    navigate('/thank-you')\r\n  }\r\n\r\n  const placeOrder = () => {\r\n    dispatch(clearCart())\r\n    navToThankYouPage()\r\n  }\r\n\r\n  return modifyStep ? (\r\n    <div className=\"finalizationStep\" style={style.wrapper}>\r\n      <h2 style={style.title}>\r\n        Summary of the main terms and conditions of sale\r\n      </h2>\r\n      <p style={style.acceptConditions}>\r\n        General Terms and Conditions of Sale are applied to your orders. By\r\n        concluding your order, you agree that payment will be taken and that you\r\n        accept these conditions.\r\n      </p>\r\n      <p style={style.checkData}>\r\n        Verify all details of your purchase before completing the order.\r\n      </p>\r\n\r\n      <div style={style.buttonWrapper}>\r\n        <CheckoutButtonPurchase\r\n          text=\"Buy\"\r\n          onClick={placeOrder}\r\n          styleCss={{ width: 140 }}\r\n        />\r\n      </div>\r\n    </div>\r\n  ) : null\r\n}\r\n\r\nexport default CheckoutFinalizationStep\r\n","import React, { FC, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { IPropsSteps } from '../../../checkout.interface'\r\nimport InactiveStep from '../statuses/InActiveStep'\r\nimport FilledStep from '../statuses/FilledStep'\r\nimport ModifyStep from '../statuses/ModifyStep'\r\nimport {\r\n  savePayment,\r\n  selectAllPaymnetMethods\r\n} from '../../../../../api/feature/checkout/checkoutSlice'\r\nimport { RadioButton } from '../../../../../components'\r\nimport CheckoutButtonPurchase from '../../../CheckoutButtonPurchase'\r\n\r\nconst CheckoutPaymentMethodStep: FC<IPropsSteps> = ({\r\n  id,\r\n  status,\r\n  activeStep,\r\n  setStepStatus,\r\n  handleEditStep,\r\n  goToNextStep\r\n}) => {\r\n  const dispatch = useDispatch()\r\n  const paymentMethods = useSelector(selectAllPaymnetMethods)\r\n  const [payment, setPayment] = useState<string>(paymentMethods[0])\r\n\r\n  const style = {\r\n    wrapper: {\r\n      backgroundColor: activeStep !== id ? '#fff' : '#f6f6f6',\r\n      padding: 25,\r\n      borderBottom: '1px solid #e1e0e0',\r\n      position: 'relative'\r\n    }\r\n  } as const\r\n\r\n  useEffect(() => {\r\n    if (activeStep === id) setStepStatus(id)\r\n  }, [activeStep])\r\n\r\n  const onChangePaymentMethod = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setPayment(e.target.value)\r\n  }\r\n\r\n  const handleOnProceed = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault()\r\n\r\n    dispatch(savePayment(payment))\r\n    goToNextStep(id)\r\n  }\r\n\r\n  return (\r\n    <div className=\"step-paymentMethod\" style={style.wrapper}>\r\n      {/* inactive step */}\r\n      <InactiveStep\r\n        id={id}\r\n        status={status}\r\n        activeStep={activeStep}\r\n        title=\"Payment\"\r\n      />\r\n\r\n      {/* filled step */}\r\n      <FilledStep\r\n        id={id}\r\n        status={status}\r\n        activeStep={activeStep}\r\n        title=\"Payment information\"\r\n        handleEditStep={handleEditStep}\r\n        formData={{ payment }}\r\n      />\r\n\r\n      {/* not filled step/modify */}\r\n      <ModifyStep activeStep={activeStep} id={id} title=\"Payment\">\r\n        {paymentMethods.map((method) => (\r\n          <RadioButton\r\n            label={method}\r\n            value={method === payment}\r\n            onChange={onChangePaymentMethod}\r\n            key={method}\r\n          />\r\n        ))}\r\n\r\n        <CheckoutButtonPurchase text=\"Proceed\" onClick={handleOnProceed} />\r\n      </ModifyStep>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CheckoutPaymentMethodStep\r\n","import React, { FC, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Input } from '../../../../../components'\r\nimport useForm from '../../../../../hooks/useForm'\r\nimport CheckoutButtonPurchase from '../../../CheckoutButtonPurchase'\r\nimport { IPropsSteps } from '../../../checkout.interface'\r\nimport InactiveStep from '../statuses/InActiveStep'\r\nimport FilledStep from '../statuses/FilledStep'\r\nimport ModifyStep from '../statuses/ModifyStep'\r\nimport { saveShippingAddress } from '../../../../../api/feature/checkout/checkoutSlice'\r\n\r\nconst CheckoutShippingAddressStep: FC<IPropsSteps> = ({\r\n  id,\r\n  status,\r\n  activeStep,\r\n  setStepStatus,\r\n  handleEditStep,\r\n  goToNextStep\r\n}) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const {\r\n    inputs,\r\n    errors,\r\n    handleOnChange,\r\n    handleOnBlur,\r\n    onSubmitCheckValidation\r\n  } = useForm({\r\n    name: '',\r\n    surname: '',\r\n    country: '',\r\n    postcode: '',\r\n    street: '',\r\n    phone: ''\r\n  })\r\n\r\n  const style = {\r\n    wrapper: {\r\n      backgroundColor: activeStep !== id ? '#fff' : '#f6f6f6',\r\n      padding: 25,\r\n      borderBottom: '1px solid #e1e0e0',\r\n      position: 'relative'\r\n    }\r\n  } as const\r\n\r\n  useEffect(() => {\r\n    if (activeStep === id) setStepStatus(id)\r\n  }, [activeStep])\r\n\r\n  const handleOnProceed = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault()\r\n\r\n    if (onSubmitCheckValidation()) {\r\n      dispatch(saveShippingAddress(inputs))\r\n      goToNextStep(id)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"step-shippingAddress\" style={style.wrapper}>\r\n      {/* inactive step */}\r\n      <InactiveStep\r\n        id={id}\r\n        status={status}\r\n        activeStep={activeStep}\r\n        title=\"Shipping details\"\r\n      />\r\n\r\n      {/* filled step */}\r\n      <FilledStep\r\n        id={id}\r\n        status={status}\r\n        activeStep={activeStep}\r\n        title=\"Shipping address\"\r\n        handleEditStep={handleEditStep}\r\n        formData={inputs}\r\n      />\r\n\r\n      {/* not filled step/modify */}\r\n      <ModifyStep activeStep={activeStep} id={id} title=\"Shipping details\">\r\n        <Input\r\n          label=\"Name\"\r\n          name=\"name\"\r\n          type=\"text\"\r\n          dataValRegex=\"Invalid name\"\r\n          dataValRegexPattern=\"^[a-zA-Z]*$\"\r\n          dataValRequired=\"The name field is required.\"\r\n          dataValLengthMax=\"20\"\r\n          value={inputs?.name || ''}\r\n          onChange={handleOnChange}\r\n          onBlur={handleOnBlur}\r\n          error={errors.name}\r\n        />\r\n\r\n        <Input\r\n          label=\"Surname\"\r\n          name=\"surname\"\r\n          type=\"text\"\r\n          dataValRegex=\"Invalid name\"\r\n          dataValRegexPattern=\"^[a-zA-Z]*$\"\r\n          dataValRequired=\"The surname field is required.\"\r\n          dataValLengthMax=\"20\"\r\n          value={inputs?.surname || ''}\r\n          onChange={handleOnChange}\r\n          onBlur={handleOnBlur}\r\n          error={errors.surname}\r\n        />\r\n\r\n        <Input\r\n          label=\"Country\"\r\n          name=\"country\"\r\n          type=\"text\"\r\n          dataValRegex=\"Invalid country\"\r\n          dataValRegexPattern=\"^[a-zA-Z]*$\"\r\n          dataValRequired=\"The country field is required.\"\r\n          dataValLengthMax=\"20\"\r\n          value={inputs?.country || ''}\r\n          onChange={handleOnChange}\r\n          onBlur={handleOnBlur}\r\n          error={errors.country}\r\n        />\r\n\r\n        <Input\r\n          label=\"Postcode\"\r\n          name=\"postcode\"\r\n          type=\"text\"\r\n          dataValRegex=\"Invalid postcode\"\r\n          dataValRegexPattern=\"^[a-z0-9][a-z0-9\\- ]{0,10}$\"\r\n          dataValRequired=\"The postcode field is required.\"\r\n          dataValLengthMax=\"10\"\r\n          value={inputs?.postcode || ''}\r\n          onChange={handleOnChange}\r\n          onBlur={handleOnBlur}\r\n          error={errors.postcode}\r\n        />\r\n\r\n        <Input\r\n          label=\"Street\"\r\n          name=\"street\"\r\n          type=\"text\"\r\n          dataValRegex=\"Invalid street\"\r\n          dataValRegexPattern=\"^\\s*\\S+(?:\\s+\\S+)\"\r\n          dataValRequired=\"The street field is required.\"\r\n          dataValLengthMax=\"20\"\r\n          value={inputs?.street || ''}\r\n          onChange={handleOnChange}\r\n          onBlur={handleOnBlur}\r\n          error={errors.street}\r\n        />\r\n\r\n        <Input\r\n          label=\"Phone number\"\r\n          name=\"phone\"\r\n          type=\"text\"\r\n          dataValRegex=\"Invalid phone number\"\r\n          dataValRegexPattern=\"^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$\"\r\n          dataValRequired=\"The phone number field is required.\"\r\n          dataValLengthMax=\"20\"\r\n          value={inputs?.phone || ''}\r\n          onChange={handleOnChange}\r\n          onBlur={handleOnBlur}\r\n          error={errors.phone}\r\n        />\r\n\r\n        <CheckoutButtonPurchase text=\"Proceed\" onClick={handleOnProceed} />\r\n      </ModifyStep>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CheckoutShippingAddressStep\r\n","import React, { FC, useState } from 'react'\r\nimport steps from '../../stepsConfirmation'\r\nimport CheckoutCheckMailStep from './steps/CheckoutCheckMailStep'\r\nimport CheckoutDeliveryMethodStep from './steps/CheckoutDeliveryMethodStep'\r\nimport CheckoutFinalizationStep from './steps/CheckoutFinalizationStep'\r\nimport CheckoutPaymentMethodStep from './steps/CheckoutPaymentMethodStep'\r\nimport CheckoutShippingAddressStep from './steps/CheckoutShippingAddressStep'\r\n\r\nconst INITIAL_STATE = 'mail'\r\n\r\nconst CheckoutConfirmationStep: FC = () => {\r\n  const [activeStep, setActiveStep] = useState<string | undefined>(\r\n    INITIAL_STATE\r\n  )\r\n  const [status, setStatus] = useState({\r\n    mail: { active: true, data: false },\r\n    shippingAddress: { active: false, data: false },\r\n    deliveryMethod: { active: false, data: false },\r\n    paymentMethod: { active: false, data: false },\r\n    finalizationStep: { active: false, data: false }\r\n  })\r\n\r\n  function getNextStep() {\r\n    return Object.keys(status).find(\r\n      (key) => status[key as keyof typeof status].active === false\r\n    )\r\n  }\r\n\r\n  function deactivateStep() {\r\n    setStatus((prev) => ({\r\n      ...prev,\r\n      [activeStep as keyof typeof status]: {\r\n        ...prev[activeStep as keyof typeof status],\r\n        active: false\r\n      }\r\n    }))\r\n  }\r\n\r\n  function setDataOnReady(currentStep: string) {\r\n    setStatus((prev) => ({\r\n      ...prev,\r\n      [currentStep]: {\r\n        ...prev[currentStep as keyof typeof status],\r\n        data: true\r\n      }\r\n    }))\r\n  }\r\n\r\n  function toggleStep(currentStep: string) {\r\n    setActiveStep(activeStep === currentStep ? getNextStep() : currentStep)\r\n  }\r\n\r\n  const setStepStatus = (id: string) => {\r\n    setStatus((prev) => ({\r\n      ...prev,\r\n      [id]: {\r\n        ...prev[id as keyof typeof status],\r\n        active: true\r\n      }\r\n    }))\r\n  }\r\n\r\n  const editStep = (currentStep: string) => {\r\n    const stepNotFilled = !status[activeStep as keyof typeof status].data\r\n    if (stepNotFilled) deactivateStep()\r\n\r\n    toggleStep(currentStep)\r\n  }\r\n\r\n  const goToNextStep = (id: string) => {\r\n    setActiveStep(getNextStep())\r\n    setDataOnReady(id)\r\n  }\r\n\r\n  return (\r\n    <div className=\"checkout-confirmation-steps\">\r\n      {/* step 1 of 5 */}\r\n      <CheckoutCheckMailStep\r\n        id={steps.mail}\r\n        status={status.mail}\r\n        activeStep={activeStep}\r\n        handleEditStep={editStep}\r\n        setStepStatus={setStepStatus}\r\n        goToNextStep={goToNextStep}\r\n      />\r\n      {/* step 2 of 5 */}\r\n      <CheckoutShippingAddressStep\r\n        id={steps.shippingAddress}\r\n        activeStep={activeStep}\r\n        status={status.shippingAddress}\r\n        setStepStatus={setStepStatus}\r\n        handleEditStep={editStep}\r\n        goToNextStep={goToNextStep}\r\n      />\r\n      {/* step 3 of 5 */}\r\n      <CheckoutDeliveryMethodStep\r\n        id={steps.deliveryMethod}\r\n        activeStep={activeStep}\r\n        status={status.deliveryMethod}\r\n        setStepStatus={setStepStatus}\r\n        handleEditStep={editStep}\r\n        goToNextStep={goToNextStep}\r\n      />\r\n      {/* step 4 of 5 */}\r\n      <CheckoutPaymentMethodStep\r\n        id={steps.paymentMethod}\r\n        activeStep={activeStep}\r\n        status={status.paymentMethod}\r\n        setStepStatus={setStepStatus}\r\n        handleEditStep={editStep}\r\n        goToNextStep={goToNextStep}\r\n      />\r\n\r\n      {/* finalization step 5 of 5 */}\r\n      <CheckoutFinalizationStep\r\n        id={steps.finalizationStep}\r\n        activeStep={activeStep}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CheckoutConfirmationStep\r\n","import React, { FC } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useSizeScreen } from '../../../hooks'\r\nimport CheckoutCartReview from './first-step/CheckoutCartReview'\r\nimport CheckoutProgressBar from './CheckoutProgressBar'\r\nimport CheckoutConfirmationStep from './second-step/CheckoutConfirmationStep'\r\nimport { selectIsStep } from '../../../api/feature/checkout/checkoutSlice'\r\n\r\nconst CheckoutMain: FC = () => {\r\n  const screen = useSizeScreen()\r\n  const isStep = useSelector(selectIsStep)\r\n\r\n  const style = {\r\n    main: {\r\n      width: '100%',\r\n      maxWidth: screen.isX || screen.isL ? '66.666%' : undefined,\r\n      marginBottom: 48\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"checkout-main\" style={style.main}>\r\n      <CheckoutProgressBar />\r\n\r\n      {/* step 1 */}\r\n      {isStep.cart && <CheckoutCartReview />}\r\n\r\n      {/* step 2 */}\r\n      {isStep.confirmation && <CheckoutConfirmationStep />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CheckoutMain\r\n","import React, { FC } from 'react'\r\nimport { useSizeScreen } from '../../hooks'\r\nimport CheckoutAside from './aside-column/CheckoutAside'\r\nimport CheckoutMain from './main-column/CheckoutMain'\r\n\r\nconst CheckoutColumnWrapper: FC = () => {\r\n  const screen = useSizeScreen()\r\n\r\n  const style = {\r\n    wrapper: {\r\n      display: screen.isX || screen.isL ? 'flex' : 'block'\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"checkout-wrapper\" style={style.wrapper}>\r\n      <CheckoutMain />\r\n      <CheckoutAside />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CheckoutColumnWrapper\r\n","import React, { FC, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport { registerStep } from '../api/feature/checkout/checkoutSlice'\r\nimport { Headline1 } from '../components'\r\nimport CheckoutColumnWrapper from '../features/checkout/CheckoutColumnWrapper'\r\n\r\nimport { Section } from '../layout'\r\n\r\nconst Checkout: FC = () => {\r\n  const dispatch = useDispatch()\r\n  const { step } = useParams()\r\n\r\n  useEffect(() => {\r\n    if (step) {\r\n      dispatch(registerStep(step))\r\n    }\r\n  }, [step])\r\n\r\n  return (\r\n    <Section styleCss={{ margin: 0, marginBottom: 48 }}>\r\n      <Headline1 styleCss={{ textAlign: 'center', margin: '48px 0' }}>\r\n        {step === 'cart' ? 'Shopping Bag' : 'Proceed to purchase'}\r\n      </Headline1>\r\n\r\n      {/* content */}\r\n      <CheckoutColumnWrapper />\r\n    </Section>\r\n  )\r\n}\r\n\r\nexport default Checkout\r\n"],"names":["style","subtotal","wrapper","textTransform","display","justifyContent","label","fontWeight","price","marginBottom","cartTotal","useSelector","totalPrice","background","padding","shipping","method","lineHeight","procced","width","marginLeft","border","shippingMethods","selectAllShippingMethods","className","map","type","text","path","variant","styleCss","cartReviewList","selectAllProductsCart","product","CartItem","id","orderReview","labelContainer","modify","color","margin","borderBottom","productNumber","totalQuantity","CountLabel","count","priceSubtotal","marginTop","screen","useSizeScreen","isStep","selectIsStep","aside","maxWidth","isX","isL","undefined","cart","confirmation","mail","shippingAddress","deliveryMethod","paymentMethod","finalizationStep","CheckoutButtonPurchase","onClick","useState","onMouse","setOnMouse","button","position","backgroundSize","backgroundColor","backgroundImage","backgroundPosition","borderColor","borderRadius","outline","textAlign","overflow","willChange","transition","onMouseEnter","onMouseLeave","defaultProps","CheckoutButtonModify","letterSpacing","status","activeStep","handleEditStep","title","formData","step","flexDirection","isS","isM","alignItems","welcomeMessage","flexWrap","iconCheck","height","right","buttonModify","formDataWrapper","formDataValue","showFormData","Object","keys","key","active","data","subtitle","description","ModifyStep","children","setStepStatus","goToNextStep","dispatch","useDispatch","useForm","email","inputs","errors","handleOnChange","handleOnBlur","onSubmitCheckValidation","Input","name","dataValRegex","dataValRegexPattern","dataValRequired","dataValLengthMax","value","onChange","onBlur","error","e","preventDefault","saveEmail","delivery","setDelivery","useEffect","onChangeShippingMethod","target","saveDelivery","acceptConditions","checkData","buttonWrapper","navigate","useNavigate","clearCart","paymentMethods","selectAllPaymnetMethods","payment","setPayment","onChangePaymentMethod","savePayment","surname","country","postcode","street","phone","saveShippingAddress","setActiveStep","setStatus","getNextStep","find","prev","editStep","currentStep","toggleStep","steps","main","CheckoutProgressBar","useParams","registerStep"],"sourceRoot":""}