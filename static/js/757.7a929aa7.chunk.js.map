{"version":3,"file":"static/js/757.7a929aa7.chunk.js","mappings":"gNAwDA,EA/CuC,SAAH,GAAuB,IAAjBA,EAAS,EAATA,UAClCC,GAAWC,EAAAA,EAAAA,MACjB,EAA4BC,EAAAA,EAAAA,yBAAkCH,GAAtDI,EAAI,EAAJA,KAAMC,EAAS,EAATA,UAEd,OACE,iBAAKC,UAAU,sBAAqB,WAElC,gBAAKC,MAAO,CAAEC,aAAc,QAAS,UACnC,SAAC,KAAS,WAAM,OAAJJ,QAAI,IAAJA,OAAI,EAAJA,EAAMK,WAAY,eAI/BJ,IACC,UAAC,KAAI,CACHK,OAAQ,CAAC,GAAI,GAAI,GAAI,IACrBC,UAAW,CAAC,GAAI,GAAI,GAAI,IACxBC,YAAa,CAAC,EAAG,EAAG,EAAG,GAAG,WAC1B,SAAC,KAAK,CACJR,KAAMA,EACNS,IAAS,OAAJT,QAAI,IAAJA,OAAI,EAAJA,EAAMU,OAAO,GAClBC,KAAI,oBAAmB,OAAJX,QAAI,IAAJA,OAAI,EAAJA,EAAMK,aAE3B,SAAC,KAAK,CACJL,KAAMA,EACNS,IAAS,OAAJT,QAAI,IAAJA,OAAI,EAAJA,EAAMU,OAAO,GAClBC,KAAI,oBAAmB,OAAJX,QAAI,IAAJA,OAAI,EAAJA,EAAMK,aAE3B,SAAC,KAAK,CACJL,KAAMA,EACNS,IAAS,OAAJT,QAAI,IAAJA,OAAI,EAAJA,EAAMU,OAAO,GAClBC,KAAI,oBAAmB,OAAJX,QAAI,IAAJA,OAAI,EAAJA,EAAMK,gBAM/B,gBAAKF,MAAO,CAAES,UAAW,SAAUC,UAAW,IAAK,UACjD,SAAC,KAAM,CACLC,KAAK,OACLC,QAAS,kBAAMlB,EAAS,aAAD,OAAkB,OAAJG,QAAI,IAAJA,OAAI,EAAJA,EAAMK,UAAW,EACtDW,QAAQ,cAKlB,E,4DCDA,EA3CiB,WACf,IAAMC,GAASC,EAAAA,EAAAA,KACTC,EAAaF,EAAOG,IAAM,EAAI,EAC9BC,EAAgBJ,EAAOK,IAAM,EAAIH,EAEvC,OACE,kBAAMjB,UAAU,eAAc,WAC5B,SAAC,KAAI,CAACN,UAAU,OAEhB,SAAC2B,EAAA,EAAO,WACN,SAACC,EAAA,GAAkB,CAACC,aAAa,IAAIC,aAAa,SAGpD,SAACH,EAAA,EAAO,CAACI,KAAK,YAAW,UACvB,UAACC,EAAA,EAAM,CAACC,aAAc,GAAIR,cAAe,EAAE,WACzC,SAACS,EAAA,GAAa,CAAClC,UAAU,OACzB,SAACkC,EAAA,GAAa,CAAClC,UAAU,OACzB,SAACkC,EAAA,GAAa,CAAClC,UAAU,YAI7B,SAAC2B,EAAA,EAAO,WACN,UAACK,EAAA,EAAM,CACLC,aAAc,GACdR,cAAeA,EACfU,YAAY,EACZC,cAAc,YAAW,WACzB,SAACC,EAAA,EAAa,CAACrC,UAAU,QACzB,SAACqC,EAAA,EAAa,CAACrC,UAAU,QACzB,SAACqC,EAAA,EAAa,CAACrC,UAAU,QACzB,SAACqC,EAAA,EAAa,CAACrC,UAAU,QACzB,SAACqC,EAAA,EAAa,CAACrC,UAAU,QACzB,SAACqC,EAAA,EAAa,CAACrC,UAAU,aAI7B,SAAC2B,EAAA,EAAO,WACN,SAAC,EAAkB,CAAC3B,UAAU,WAItC,C","sources":["features/home/CollectionProducts.tsx","pages/Home.tsx"],"sourcesContent":["import React, { FC } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { apiSlice } from '../../api/feature/apiSlice'\r\nimport { Grid, Headline1, Image, Button } from '../../components'\r\n\r\ninterface IProps {\r\n  productId: string\r\n}\r\n\r\nconst CollectionProducts: FC<IProps> = ({ productId }) => {\r\n  const navigate = useNavigate()\r\n  const { data, isSuccess } = apiSlice.useGetSingleProductQuery(productId)\r\n\r\n  return (\r\n    <div className=\"collection-products\">\r\n      {/* headline */}\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <Headline1>{data?.category || 'category'}</Headline1>\r\n      </div>\r\n\r\n      {/* images */}\r\n      {isSuccess && (\r\n        <Grid\r\n          rowGap={[50, 50, 50, 50]}\r\n          columnGap={[50, 50, 50, 50]}\r\n          gridColumns={[1, 3, 3, 3]}>\r\n          <Image\r\n            data={data}\r\n            src={data?.images[0]}\r\n            href={`/products/${data?.category}`}\r\n          />\r\n          <Image\r\n            data={data}\r\n            src={data?.images[1]}\r\n            href={`/products/${data?.category}`}\r\n          />\r\n          <Image\r\n            data={data}\r\n            src={data?.images[3]}\r\n            href={`/products/${data?.category}`}\r\n          />\r\n        </Grid>\r\n      )}\r\n\r\n      {/* button */}\r\n      <div style={{ textAlign: 'center', marginTop: 25 }}>\r\n        <Button\r\n          text=\"Shop\"\r\n          onClick={() => navigate(`/products/${data?.category}`)}\r\n          variant=\"white\"\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CollectionProducts\r\n","import React, { FC } from 'react'\r\nimport Section from '../layout/Section'\r\nimport CollectionProducts from '../features/home/CollectionProducts'\r\nimport ProductColumn from '../features/home/ProductColumn'\r\nimport ProductTeaser from '../components/product-teaser/ProductTeaser'\r\nimport useSizeScreen from '../hooks/useSizeScreen'\r\nimport Slider from '../components/slider/Slider'\r\nimport { Hero } from '../features'\r\nimport TwoColumnsProducts from '../features/home/TwoColumnsProducts'\r\n\r\nconst Home: FC = () => {\r\n  const screen = useSizeScreen()\r\n  const slidesOnMS = screen.isS ? 2 : 3\r\n  const slidesPerView = screen.isX ? 4 : slidesOnMS\r\n\r\n  return (\r\n    <main className=\"main-content\">\r\n      <Hero productId=\"6\" />\r\n\r\n      <Section>\r\n        <TwoColumnsProducts productIdOne=\"1\" productIdTwo=\"9\" />\r\n      </Section>\r\n\r\n      <Section type=\"fullWidth\">\r\n        <Slider spaceBetween={10} slidesPerView={1}>\r\n          <ProductColumn productId=\"6\" />\r\n          <ProductColumn productId=\"8\" />\r\n          <ProductColumn productId=\"7\" />\r\n        </Slider>\r\n      </Section>\r\n\r\n      <Section>\r\n        <Slider\r\n          spaceBetween={40}\r\n          slidesPerView={slidesPerView}\r\n          navigation={false}\r\n          configuration=\"scrollbar\">\r\n          <ProductTeaser productId=\"48\" />\r\n          <ProductTeaser productId=\"50\" />\r\n          <ProductTeaser productId=\"54\" />\r\n          <ProductTeaser productId=\"55\" />\r\n          <ProductTeaser productId=\"51\" />\r\n          <ProductTeaser productId=\"52\" />\r\n        </Slider>\r\n      </Section>\r\n\r\n      <Section>\r\n        <CollectionProducts productId=\"11\" />\r\n      </Section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Home\r\n"],"names":["productId","navigate","useNavigate","apiSlice","data","isSuccess","className","style","marginBottom","category","rowGap","columnGap","gridColumns","src","images","href","textAlign","marginTop","text","onClick","variant","screen","useSizeScreen","slidesOnMS","isS","slidesPerView","isX","Section","TwoColumnsProducts","productIdOne","productIdTwo","type","Slider","spaceBetween","ProductColumn","navigation","configuration","ProductTeaser"],"sourceRoot":""}